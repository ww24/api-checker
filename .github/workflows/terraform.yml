name: terraform

on:
  push:
    branches:
      - master
    paths:
      - "terraform/**"
  pull_request:
    branches:
      - master
    paths:
      - "terraform/**"
  workflow_call:
    inputs:
      version:
        type: string
        required: true

jobs:
  terraform:
    name: terraform
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      pull-requests: "write"
      id-token: "write"
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v3
      - uses: "google-github-actions/auth@v0"
        with:
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
          service_account: "terraform@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com"
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "~> 1.1.7"
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform validate
        id: validate
        run: terraform validate -no-color
      - name: Generate tfvars
        run: |
          echo "project=\"${{ secrets.GCP_PROJECT_ID }}\"" >> terraform.auto.tfvars
          if [ -n "${{ inputs.version }}" ]; then
            echo "version=\"${{ inputs.version }}\"" >> terraform.auto.tfvars
          fi
      - name: Terraform plan
        id: plan
        run: terraform plan -no-color
      - name: Output plan
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`diff\n
            terraform\n${{ steps.plan.outputs.stdout }}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ steps.working-directory }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform apply
        if: github.event_name == 'push'
        run: terraform apply -no-color
